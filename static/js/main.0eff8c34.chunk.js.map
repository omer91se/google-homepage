{"version":3,"sources":["index.js"],"names":["Display","props","counter","Button","onClick","name","App","useState","setCounter","ReactDOM","render","document","getElementById"],"mappings":"qIAsEMA,EAAU,SAACC,GACf,OACE,8BAAMA,EAAMC,WAIVC,EAAS,SAACF,GACd,OACE,wBAAQG,QAASH,EAAMG,QAAvB,SACGH,EAAMI,QAKPC,EAAM,SAACL,GAAW,IAAD,EACWM,mBAAS,GADpB,mBACbL,EADa,KACJM,EADI,KASrB,OACE,gCACE,cAACR,EAAD,CAASE,QAASA,IAClB,cAACC,EAAD,CAAQC,QATM,kBAAMI,EAAWN,EAAU,IASXG,KAAK,MACnC,cAACF,EAAD,CAAQC,QANM,kBAAMI,EAAWN,EAAU,IAMXG,KAAK,MACnC,cAACF,EAAD,CAAQC,QATM,kBAAMI,EAAW,IASDH,KAAK,c,OAKvCI,EAASC,OAAO,cAACJ,EAAD,IAChBK,SAASC,eAAe,W","file":"static/js/main.0eff8c34.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Header = (props) => {\n  return (\n    <h1>{props.course.name}</h1>\n  )\n}\n\nconst Content = (props) => {\n  return(\n    <>\n    <Part \n      part={props.parts[0].name} exercises={props.parts[0].exercises} \n    />\n    <Part \n      part={props.parts[1].name} exercises={props.parts[1].exercises}\n    />\n    <Part\n     part={props.parts[2].name} exercises={props.parts[2].exercises}\n    />  \n    </>\n\n  )\n}\n\nconst Part = (props) => {\n  return(\n    <p>{props.part} {props.exercises}</p>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <p>\n      Number of exercises {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises}\n    </p>\n  )\n}\n\nconst AppOld = () => {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7\n      },\n      {\n        name: 'State of a component',\n        exercises: 14\n      }\n    ]\n  }\n\n  return (\n    \n    <div>\n      <Header course={course}/>\n      <Content parts={course.parts}/>\n      <Total parts={course.parts}/> \n    </div>\n  )\n}\n\n\nconst Display = (props) => {\n  return (\n    <div>{props.counter}</div>\n  )\n};\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick}> \n      {props.name}\n    </button>\n  )\n};\n\nconst App = (props) => {\n  const [ counter, setCounter ] = useState(0);\n\nconst handleClick = () => setCounter(counter + 1);\n\nconst handleReset = () => setCounter(0);\n\nconst handleMinus = () => setCounter(counter - 1);\n\n  return (\n    <div>\n      <Display counter={counter}/>\n      <Button onClick={handleClick} name='+' /> \n      <Button onClick={handleMinus} name='-' />\n      <Button onClick={handleReset} name='Reset' />\n    </div>\n  )\n};\n\n  ReactDOM.render(<App />, \n  document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}