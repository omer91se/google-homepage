{"version":3,"sources":["index.js"],"names":["Button","handleClick","text","onClick","Statistics","goodCounter","badCounter","neutralCounter","all","id","Statistic","name","value","App","useState","setGood","setNeutral","setBad","ReactDOM","render","document","getElementById"],"mappings":"6LAIMA,G,MAAS,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KAC5B,OACA,wBAAQC,QAASF,EAAjB,SACGC,MAKCE,EAAa,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,eAEtCC,EAAM,kBAAMH,EAAcC,EAAaC,GAI7C,OAAmB,IAAhBF,GAAoC,IAAfC,GAAuC,IAAnBC,EAExC,qBAAKE,GAAG,cAAR,+BAIF,gCACE,kCACE,cAACC,EAAD,CAAWC,KAAK,OAAOC,MAAOP,IAC9B,cAACK,EAAD,CAAWC,KAAK,UAAUC,MAAOL,IACjC,cAACG,EAAD,CAAWC,KAAK,MAAMC,MAAON,IAC7B,cAACI,EAAD,CAAWC,KAAK,MAAMC,MAAOJ,MAC7B,cAACE,EAAD,CAAWC,KAAK,UAAUC,OAfTP,EAAcC,GAAYE,MAgB3C,cAACE,EAAD,CAAWC,KAAK,UAAUC,MAfRP,EAAaG,IAAS,YAqB1CE,EAAY,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACxB,OACE,+BACE,+BAAKD,EAAL,OACA,6BAAKC,QAKLC,EAAM,WAAO,IAAD,EACeC,mBAAS,GADxB,mBACTT,EADS,KACIU,EADJ,OAEqBD,mBAAS,GAF9B,mBAETP,EAFS,KAEOS,EAFP,OAGaF,mBAAS,GAHtB,mBAGTR,EAHS,KAGGW,EAHH,KAShB,OACE,gCACE,+CACA,4CACA,cAACjB,EAAD,CAAQC,YARO,kBAAMc,EAAQV,EAAc,IAQVH,KAAK,SACtC,cAACF,EAAD,CAAQC,YARU,kBAAMe,EAAWT,EAAiB,IAQhBL,KAAK,YACzC,cAACF,EAAD,CAAQC,YARM,kBAAMgB,EAAOX,EAAa,IAQRJ,KAAK,QACrC,cAACE,EAAD,CAAYC,YAAaA,EAAaE,eAAgBA,EAAgBD,WAAYA,QAKxFY,IAASC,OAAO,cAACN,EAAD,IACdO,SAASC,eAAe,W","file":"static/js/main.77225945.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = ({handleClick, text}) => {\n  return (\n  <button onClick={handleClick} >\n    {text}\n  </button>\n  )\n};\n\nconst Statistics = ({goodCounter, badCounter, neutralCounter}) => {\n\n  const all = () => goodCounter + badCounter + neutralCounter;\n  const average = () => (goodCounter - badCounter)/all();\n  const percent = () => ((goodCounter)/all()) * 100;\n  \n  if(goodCounter === 0 && badCounter === 0 && neutralCounter === 0)\n    return(\n      <div id='no-feedback'>No feedback given</div>\n    )\n\n  return (\n    <table>\n      <tbody>\n        <Statistic name='good' value={goodCounter}/>\n        <Statistic name='neutral' value={neutralCounter}/>\n        <Statistic name='bad' value={badCounter}/>\n        <Statistic name='all' value={all()}/>\n        <Statistic name='average' value={average()}/>\n        <Statistic name='percent' value={percent()}/>\n       </tbody>\n    </table>\n  )\n}\n\nconst Statistic = ({name, value}) => {\n  return (\n    <tr>\n      <td>{name}:</td> \n      <td>{value}</td>\n    </tr>\n  )\n}\n\nconst App = () => {\n  const [goodCounter, setGood] = useState(0);\n  const [neutralCounter, setNeutral] = useState(0);\n  const [badCounter, setBad] = useState(0);\n\n  const handleGood = () => setGood(goodCounter + 1);\n  const handleNeutral = () => setNeutral(neutralCounter + 1);\n  const handleBad = () => setBad(badCounter + 1);\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <h2>statistics</h2>\n      <Button handleClick={handleGood} text='good'/>\n      <Button handleClick={handleNeutral} text='neutral'/>\n      <Button handleClick={handleBad} text='bad'/>\n      <Statistics goodCounter={goodCounter} neutralCounter={neutralCounter} badCounter={badCounter}/>\n    </div>\n  )\n};\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}